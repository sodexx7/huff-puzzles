 
/** 
 *  SEND_ETHER HUFF EXERCISE
 *  
 *  The task is to enable this contract, when called with function `sendEther(address)` to
 *  transfer the value sent with the call to the address in the argument.
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

 #define function sendEther(address) payable returns()


 #define macro MAIN() = takes(0) returns(0) {

     // Get the function selector
    0x00 calldataload 0xE0 shr

     // Jump to the implementation of the sendEther function if the calldata matches the function selector
    __FUNC_SIG(sendEther) eq sendEther jumpi

     // Revert if an unrecognized function occured. 
    0x00 0x00 revert

    sendEther:
        SENDETHER()
    
 }

#define macro SENDETHER() = takes(0) returns(0) {  
    // https://www.evm.codes/#f1?fork=shanghai
    // using call transfer eth

// This demo, the target contract has no code, so the 4 deepest value in stack is 0x00    
// gas              gas
// address          address
// value            callvalue
// argsOffset       0x00
// argsSize         0x00
// retOffset        0x00
// retSize          0x00

    // This implementation just transfer eth, doesn't return the bool result (an account with no code will return success as true.)
    0x00 0x00 0x00 0x00  // [argsOffset,argsSize,retOffset,retSize]
    callvalue            // [value,argsOffset,argsSize,retOffset,retSize] 
    0x04 calldataload    // [address,value,argsOffset,argsSize,retOffset,retSize] 
    gas                  // [gas,address,value,argsOffset,argsSize,retOffset,retSize]
    call    
    

}